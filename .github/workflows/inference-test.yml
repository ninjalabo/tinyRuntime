
name: inference-test

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  ubuntu-focal-make:
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4
      
      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libatlas-base-dev cpputest
          git clone https://github.com/flame/blis.git
          cd blis
          ./configure -t openmp auto
          make -j
          sudo make install
          sudo ldconfig

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Pip setup
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run original implementation
        run: |
          make ut
          make compile
          ./ut
          pytest

      - name: Run optimized implementation
        run: |
          make ut BLIS=1 ARCH=x86
          make compile BLIS=1 ARCH=x86
          ./ut
          pytest

      - name: Run Python notebooks
        run: |
          make nbchk

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()  # Ensure artifacts are uploaded even if pytest fails
        with:
          name: upload_files_linux
          path: |
            test_outputs/

  macOS-latest-make:
    runs-on: macos-latest # macos-14 20/5/2024

    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4

      - name: Dependencies
        id: depends
        run: |
          brew update
          brew install cpputest blis llvm libomp
          export PATH="/usr/local/opt/llvm/bin:$PATH"

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Pip setup
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run original implementation
        run: |
          make ut
          make compile
          ./ut
          pytest

      - name: Run optimized implementation
        run: |
          make ut BLIS=1
          make compile BLIS=1
          ./ut
          pytest

      - name: Run Python notebooks
        run: |
          make nbchk

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()  # Ensure artifacts are uploaded even if pytest fails
        with:
          name: upload_files_mac
          path: |
            test_outputs/
